name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Only attempt Docker login when we have secrets (and only for pushes)
      - name: Login to Docker Hub
        if: >
          github.event_name == 'push' &&
          env.DOCKERHUB_USERNAME != '' &&
          env.DOCKERHUB_TOKEN != ''
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image (only on push to main)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mvntmct:latest

      - name: Deploy on remote server via SSH (only on push)
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          timeout: 120
          script: |
            set -e

            # Login on remote host (optional)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || true

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mvntmct:latest

            if [ "$(docker ps -q -f name=myapp)" ]; then
              docker stop myapp || true
              docker rm myapp || true
            fi

            if docker images -q ${{ secrets.DOCKERHUB_USERNAME }}/mvntmct:latest > /dev/null 2>&1; then
              docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/mvntmct:latest || true
            fi

            docker run -d --restart unless-stopped -p 8082:8080 --name myapp ${{ secrets.DOCKERHUB_USERNAME }}/mvntmct:latest

